#ifndef OPTIMAZER_H
#define OPTIMAZER_H

#include "AbstractDataTree.h"

/********************************************************************
*					   Класс для оптимизации кода					*
*********************************************************************
*	Производит:														*
*	1.	Поиск переменных в равенствах с помощью абстрактного дерева	*
*		данных и подстановка их значений в выражения;				*
*	2.	Расчет константных выражений высокого приоритета (* или /);	*
*	3.	Замену произведения на сумму (при n <= 5);					*
*********************************************************************
*	Не поддерживаются:												*
*	1. Подстановка в выражения, не связанные с присваиванием;		*
*	2. Имена переменных и выражения длиннее 256 символов.			*
*********************************************************************
*	Примечание														*
*	1. При оптимизации, происходит потеря точности;					*
*	2. Поведение при прямой работе с адресами не определено.		*
*********************************************************************/

class Optimazer{
private:
	Optimazer();
	static void MutiplyAndDivide(char **line);		//высчитывает произведения констант
	static void AddVariablesInDataTree(char *line, int baseInd, AbstractDataTree &variables);
	static void ReplaceVariablesWithTheirValue(char **line, int baseInd, AbstractDataTree &variables);
	static void ReplaceMultiplication(char **line);	//заменяет произведение на сумму
public:
	static void Optimaze(const char *filePath);
};
#endif